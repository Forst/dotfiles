- defaults:
    link:
      create: true
      relink: true
      force: true
    shell:
      quiet: true
      stdout: true
      stderr: true
    create:
      mode: 0750

- clean:
    ~/: {}
    ~/.config:
      recursive: true

- shell:
  - description: 'Install Oh My Zsh'
    command: |
      zsh_custom=${ZSH_CUSTOM:-~/.oh-my-zsh/custom}

      if [ ! -e ~/.oh-my-zsh ]; then
        git clone https://github.com/ohmyzsh/ohmyzsh.git ~/.oh-my-zsh
      fi

      mkdir -p ${zsh_custom}/plugins
      mkdir -p ${zsh_custom}/themes

      if [ ! -e ${zsh_custom}/themes/powerlevel10k ]; then
        git clone https://github.com/romkatv/powerlevel10k.git ${zsh_custom}/themes/powerlevel10k
      fi

      if [ ! -e ${zsh_custom}/plugins/encode64 ]; then
        cp -a zsh-plugins/encode64 ${zsh_custom}/plugins/
      fi

      if [ ! -e ${zsh_custom}/plugins/zsh-syntax-highlighting ]; then
        git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${zsh_custom}/plugins/zsh-syntax-highlighting
      fi

  - description: 'Install pyenv'
    command: |
      if [ ! -e ~/.pyenv ]; then
        git clone https://github.com/pyenv/pyenv.git ~/.pyenv
        (
          cd ~/.pyenv
          src/configure
          make -C src
        )
      fi
  - description: 'Install rbenv'
    command: |
      if [ ! -e ~/.rbenv ]; then
        git clone https://github.com/rbenv/rbenv.git ~/.rbenv
        (
          cd ~/.rbenv
          src/configure
          make -C src
        )
        rbenv_root="$(~/.rbenv/bin/rbenv root)"
        mkdir -p "${rbenv_root}"/plugins
        git clone https://github.com/rbenv/ruby-build.git "${rbenv_root}"/plugins/ruby-build
      fi

  - description: 'Install nvm'
    command: |
      if [ ! -e ~/.nvm ]; then
        git clone https://github.com/nvm-sh/nvm.git ~/.nvm
      fi

  - description: 'Install Tmux Plugin Manager'
    command: |
      if [ ! -e ~/.tmux/plugins/tpm ]; then
        mkdir -p ~/.tmux/plugins
        git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
      fi

  - description: 'Get iTerm2 integration script (macOS)'
    command: |
      if [ "$(uname)" = 'Darwin' ] && [ ! -e ~/.iterm2.sh ]; then
        curl -o ~/.iterm2.sh -SL "https://iterm2.com/shell_integration/zsh"
      fi

- create:
  - ~/.ssh/config.d

- link:
    ~/.config/alacritty/alacritty.toml: configs/alacritty.toml
    ~/.config/bat/config: configs/bat
    ~/.config/glab-cli/config.yml: configs/glab-cli/config.yml
    ~/.config/glow/glow.yml: configs/glow.yml
    ~/.config/ptpython/config.py: configs/ptpython.py
    ~/.config/pypoetry/config.toml: configs/pypoetry.toml
    ~/.gitconfig: configs/git/gitconfig
    ~/.gitignore: configs/git/gitignore
    ~/.gnupg/gpg.conf: configs/gnupg/gpg.conf
    ~/.gnupg/gpg-agent.conf: configs/gnupg/gpg-agent.conf
    ~/.gnupg/scdaemon.conf: configs/gnupg/scdaemon.conf
    ~/.nanorc: configs/nanorc
    ~/.p10k.zsh: configs/p10k.zsh
    ~/.pam_environment: configs/pam_environment
    ~/.profile: configs/zprofile
    ~/.ssh/config: configs/ssh
    ~/.tmux.conf: configs/tmux.conf
    ~/.zprofile: configs/zprofile
    ~/.zshrc: configs/zshrc

- link:
    ~/bin/:
      glob: true
      path: bin/*
